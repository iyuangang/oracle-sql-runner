name: Build

on:
  push:
    branches: [ main, dev ]
    tags: [ 'v*' ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.github/**'
      - 'LICENSE'
  pull_request:
    branches: [ main, dev ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.github/**'
      - 'LICENSE'

jobs:
  check:
    runs-on: ubuntu-latest
    if: |
      !startsWith(github.event.head_commit.message, 'docs:') &&
      !startsWith(github.event.head_commit.message, 'ci:') &&
      !startsWith(github.event.head_commit.message, 'chore:') &&
      !startsWith(github.event.head_commit.message, 'style:') &&
      !contains(github.event.head_commit.message, 'skip ci')
    steps:
      - run: echo "Commit message allows CI to proceed"

  build:
    needs: check
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            artifact_name: sql-runner
            asset_name: sql-runner-linux-amd64
          - os: windows-latest
            artifact_name: sql-runner.exe
            asset_name: sql-runner-windows-amd64.exe
          - os: macos-latest
            artifact_name: sql-runner
            asset_name: sql-runner-darwin-amd64

    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'

    - name: Install dependencies
      run: go mod download

    - name: Build
      run: |
        go build -v -o ${{ matrix.asset_name }} -ldflags="-s -w" ./cmd/sql-runner/

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.asset_name }}
        path: ${{ matrix.asset_name }}
        compression-level: 9

  build-rocky8:
    needs: check
    name: Build Rocky 8
    runs-on: ubuntu-latest
    container: rockylinux:8

    steps:
    - name: Install dependencies
      run: |
        yum install -y gcc git make
        curl -L https://go.dev/dl/go1.22.9.linux-amd64.tar.gz | tar -C /usr/local -xzf -
        export PATH=$PATH:/usr/local/go/bin

    - uses: actions/checkout@v3

    - name: Build
      run: |
        rm -rf .git
        export PATH=$PATH:/usr/local/go/bin
        go mod download
        go build -v -o sql-runner-rocky8-amd64 -ldflags="-s -w" ./cmd/sql-runner/

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: sql-runner-rocky8-amd64
        path: sql-runner-rocky8-amd64
        compression-level: 9

  release:
    needs: [build, build-rocky8]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    permissions:
      contents: write
      packages: write
      id-token: write

    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          sql-runner*/*
        draft: false
        prerelease: false
        generate_release_notes: true
